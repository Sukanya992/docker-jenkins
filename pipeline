pipeline {
    agent any 

    environment {
        SONARQUBE_URL = 'http://35.209.243.49:9000'
        SONARQUBE_TOKEN = credentials('sonarqube-jenkins')  // Jenkins credential ID for SonarQube token
        DOCKER_IMAGE = 'sukanya996/docker-jenkins:latest'
    }

    stages {
        stage('Checkout Code') {
            steps {
                   git branch: 'main', url: 'https://github.com/Sukanya992/docker-jenkins.git'    
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh '/opt/maven/bin/mvn sonar:sonar -Dsonar.projectKey=docker-jenkins'
                }
            }
        }

        stage('Build with Maven') {
            steps {
                sh '/opt/maven/bin/mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Push to Docker Registry') {
            steps {
                withDockerRegistry([credentialsId: 'docker-jenkins', url: 'https://index.docker.io/v1/']) {
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }

        stage('Deploy') {
            steps {
                sh 'docker run -d -p 8082:8082 $DOCKER_IMAGE'
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
